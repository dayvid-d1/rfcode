name: Publish Image

on:
  schedule:
    - cron: '33 11 * * *'
  push:
    branches: [ master ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ master ]
  
env:
  # Variable to your image's name.
  GITHUB_REG: ghcr.io  
  DOCKER_REG: docker.io
  GITHUB_REPO: dayvid-d1
  IMAGE_NAME: rf-image
  TEST_VERSION: test
  VERSION: latest
  TEST_USER: app
  TEST_PORT: 8181

jobs:
  # Push to latest in github
  push-github:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.client_payload.sha }}

      - name: Set up Github Buildx
        id: buildx_docker
        uses: docker/setup-buildx-action@v1

      - name: Cache Github layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to Github
        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
        with:
          registry: ${{ env.GITHUB_REG }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract GitHub metadata
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.GITHUB_REG }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ env.TEST_VERSION }}

      - name: Build and push to test
        id: docker_build_github
        uses: docker/build-push-action@v2
        with:
          context: ./rf-image/
          file: ./rf-image/Dockerfile
          build-args: RF_USER=${{ env.TEST_USER }}
          builder: ${{ steps.buildx_github.outputs.name }}
          push: ${{ github.event_name != 'pull_request' }}
          tags:  ${{ env.GITHUB_REG }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ env.TEST_VERSION }}
          cache-from: type=locagit l,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
      
      - name: Image digest
        run: echo ${{ steps.docker_build_docker.outputs.digest }}

  # Test latest image in github
  test-github:
    needs: push-github

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.client_payload.sha }}
          
      - name: Login to Github
        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
        with:
          registry: ${{ env.GITHUB_REG }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract GitHub metadata
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.GITHUB_REG }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ env.TEST_VERSION }}
      
      - name: Test GitHub image
        run: |
         chmod +x ./rf-image/rf-image.sh
         ./rf-image/rf-image.sh -i ${{ env.GITHUB_REG }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ env.TEST_VERSION }} -m ${{ env.TEST_USER }} -p ${{ env.TEST_PORT }}

      - name: Image digest
        run: echo ${{ steps.docker_build_docker.outputs.digest }}
        
  # Push to latest in docker
  push-docker:
    needs: test-github

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.client_payload.sha }}

      - name: Set up Docker Buildx
        id: buildx_docker
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to Docker Hub
        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.DOCKER_REG }}/${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}

      - name: Push to latest docker tag
        id: docker_build_docker
        uses: docker/build-push-action@v2
        with:
          context: ./rf-image/
          file: ./rf-image/Dockerfile
          build-args: RF_USER=${{ env.TEST_USER }}
          builder: ${{ steps.buildx_docker.outputs.name }}
          push: ${{ github.event_name != 'pull_request' }}
          tags:  ${{ env.DOCKER_REG }}/${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
      
      - name: Image digest
        run: echo ${{ steps.docker_build_docker.outputs.digest }}
